"use strict";(self.webpackChunkreact_native_paper_dates_docusaurus=self.webpackChunkreact_native_paper_dates_docusaurus||[]).push([[774],{5391:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"date-picker/single-date-picker","title":"Single Date Picker","description":"The single date picker provides a modal allowing only a single date selection.","source":"@site/docs/date-picker/single-date-picker.md","sourceDirName":"date-picker","slug":"/date-picker/single-date-picker","permalink":"/react-native-paper-dates/docs/date-picker/single-date-picker","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Date Picker","permalink":"/react-native-paper-dates/docs/category/date-picker"},"next":{"title":"Range Date Picker","permalink":"/react-native-paper-dates/docs/date-picker/range-date-picker"}}');var i=s(4848),r=s(8453);const a={sidebar_position:1},d="Single Date Picker",o={},c=[{value:"Usage",id:"usage",level:2},{value:"Live Example",id:"live-example",level:2},{value:"Props",id:"props",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"single-date-picker",children:"Single Date Picker"})}),"\n",(0,i.jsx)(n.p,{children:"The single date picker provides a modal allowing only a single date selection."}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'import React from "react";\nimport { View, Text } from "react-native";\nimport { Button } from \'react-native-paper\';\nimport { DatePickerModal } from \'react-native-paper-dates\';\nimport { SafeAreaProvider } from "react-native-safe-area-context";\n\nexport default function App() {\n  const [date, setDate] = React.useState(undefined);\n  const [open, setOpen] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirmSingle = React.useCallback(\n    (params) => {\n      setOpen(false);\n      setDate(params.date);\n    },\n    [setOpen, setDate]\n  );\n\n  return (\n    <SafeAreaProvider>\n      <View style={{ justifyContent: \'center\', flex: 1, alignItems: \'center\' }}>\n        <Button onPress={() => setOpen(true)} uppercase={false} mode="outlined">\n          Pick single date\n        </Button>\n        <DatePickerModal\n          locale="en"\n          mode="single"\n          visible={open}\n          onDismiss={onDismissSingle}\n          date={date}\n          onConfirm={onConfirmSingle}\n        />\n      </View>\n    </SafeAreaProvider>\n  )\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"live-example",children:"Live Example"}),"\n",(0,i.jsxs)(n.p,{children:["View an interactive ",(0,i.jsx)(n.a,{href:"https://snack.expo.dev/@fitzwabs/react-native-paper-dates-single-picker",children:"Expo snack"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"animationType"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: String | undefined"}),(0,i.jsx)(n.br,{}),"\n","The animation used when opening the component. Defaults to ",(0,i.jsx)(n.code,{children:"'slide'"})," on ios/android and ",(0,i.jsx)(n.code,{children:"'none'"})," on web."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"calendarIcon"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: string | undefined"}),(0,i.jsx)(n.br,{}),"\n","The edit icon used to toggle between input and calendar. Defaults to ",(0,i.jsx)(n.code,{children:"calendar"}),". You can pass the name of an icon from ",(0,i.jsx)(n.a,{href:"https://materialdesignicons.com/",children:"MaterialCommunityIcons"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"closeIcon"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: string | undefined"}),(0,i.jsx)(n.br,{}),"\n","The icon used to close the component. Defaults to ",(0,i.jsx)(n.code,{children:"close"}),". You can pass the name of an icon from ",(0,i.jsx)(n.a,{href:"https://materialdesignicons.com/",children:"MaterialCommunityIcons"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"date (Required)"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: Date"}),(0,i.jsx)(n.br,{}),"\n","The date value used to populate the component."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"disableStatusBarPadding"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: boolean | undefined"}),(0,i.jsx)(n.br,{}),"\n","Flag indicating if the status bar padding should be enabled or not. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"editIcon"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: string | undefined"}),(0,i.jsx)(n.br,{}),"\n","The edit icon used to toggle between calendar and input. Defaults to ",(0,i.jsx)(n.code,{children:"pencil"}),". You can pass the name of an icon from ",(0,i.jsx)(n.a,{href:"https://materialdesignicons.com/",children:"MaterialCommunityIcons"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"endYear"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: number | undefined"}),(0,i.jsx)(n.br,{}),"\n","The end year when the component is rendered. Defaults to ",(0,i.jsx)(n.code,{children:"2200"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"inputEnabled"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: boolean | undefined"}),(0,i.jsx)(n.br,{}),"\n","Flag indicating if the component should be enabled or not. Defaults to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"label"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: String | undefined"}),(0,i.jsx)(n.br,{}),"\n","The label used as the header in the component. Defaults to ",(0,i.jsx)(n.code,{children:"'Select date'"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"locale (Required)"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: String"}),(0,i.jsx)(n.br,{}),"\n","A locale can be composed of both a base language, the country (territory) of use, and possibly codeset (which is usually assumed). For example, German is de."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"mode (Required)"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: 'single' | 'multiple' | 'range'"}),(0,i.jsx)(n.br,{}),"\n","The selection type for the date picker. For this example it is ",(0,i.jsx)(n.code,{children:'"single"'}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"onChange"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: Function"}),(0,i.jsx)(n.br,{}),"\n","Event handler when the component changes."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"onConfirm (Required)"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: Function"}),(0,i.jsx)(n.br,{}),"\n","The action to take when the date is selected."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"onDismiss (Required)"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: Function"}),(0,i.jsx)(n.br,{}),"\n","The action to take when the component is closed."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"saveLabel"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: String | undefined"}),(0,i.jsx)(n.br,{}),"\n","The label used confirm a date selection. Defaults to ",(0,i.jsx)(n.code,{children:"'Save'"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"saveLabelDisabled"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: boolean | undefined"}),(0,i.jsx)(n.br,{}),"\n","Flag indicating if the save label should be disabled and unable to receive events. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"startWeekOnMonday"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: boolean | undefined"}),(0,i.jsx)(n.br,{}),"\n","Flag indicating if calendar grid sould show monday as the first column. Defaults to ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"startYear"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: number | undefined"}),(0,i.jsx)(n.br,{}),"\n","The start year when the component is rendered. Defaults to ",(0,i.jsx)(n.code,{children:"1800"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"uppercase"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: boolean | undefined"}),(0,i.jsx)(n.br,{}),"\n","Flag indicating if the text in the component should be uppercase. Defaults to ",(0,i.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"validRange"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: {   startDate: Date | undefined,   endDate: Date | undefined,   disabledDates: Date[] | undefined }"}),(0,i.jsx)(n.br,{}),"\n","Limits which dates the user can navigate to and where events can go. Dates outside of the valid range will be grayed-out."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"visible (Required)"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"Type: boolean"}),(0,i.jsx)(n.br,{}),"\n","Flag indicating if the component should be displayed."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"presentationStyle"}),"\n",(0,i.jsx)(n.code,{children:"Type: "}),"'overFullScreen' | 'pageSheet' | undefined`\nDetermines the visual presentation style of the date picker modal. This prop allows you to define how the modal appears on the screen when it is displayed."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'overFullScreen'"}),": Overlays the modal on top of the content, allowing interaction with the underlying content."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"'pageSheet'"}),": Displays the modal as a card-style sheet that covers a portion of the screen."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["For example, if you set ",(0,i.jsx)(n.code,{children:"presentationStyle"})," to ",(0,i.jsx)(n.code,{children:"'pageSheet'"}),", the modal will be presented as a card-like sheet."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>d});var t=s(6540);const i={},r=t.createContext(i);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);